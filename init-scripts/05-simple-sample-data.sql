-- Simple Sample Data Script - Use existing foreign key values only
-- This script adds test data using only the existing lookup values

-- Add lookup table values without specifying ID (let identity columns auto-generate)
INSERT INTO CLIENT_TYPE (TYPE_NAME, DISCOUNT_RATE, REMARKS) VALUES ('Technology', 10.00, 'Technology companies');
INSERT INTO CLIENT_TYPE (TYPE_NAME, DISCOUNT_RATE, REMARKS) VALUES ('Healthcare', 12.00, 'Healthcare organizations');
INSERT INTO CLIENT_TYPE (TYPE_NAME, DISCOUNT_RATE, REMARKS) VALUES ('Education', 15.00, 'Educational institutions');
INSERT INTO CLIENT_TYPE (TYPE_NAME, DISCOUNT_RATE, REMARKS) VALUES ('Finance', 8.00, 'Financial services');
INSERT INTO CLIENT_TYPE (TYPE_NAME, DISCOUNT_RATE, REMARKS) VALUES ('Retail', 6.00, 'Retail businesses');

INSERT INTO PRODUCT_TYPE (PRODUCTTYPE_NAME, REMARKS) VALUES ('Electronics', 'Electronic devices');
INSERT INTO PRODUCT_TYPE (PRODUCTTYPE_NAME, REMARKS) VALUES ('Security', 'Security equipment');
INSERT INTO PRODUCT_TYPE (PRODUCTTYPE_NAME, REMARKS) VALUES ('Accessories', 'Computer accessories');

-- Add some clients using the existing CLIENT_TYPE values (21-25 from existing, new ones will be 26+)
INSERT INTO Clients (CLIENTNAME, ADDRESS, CITY, PHONE, CLIENT_TYPE, DISCOUNT) VALUES ('Tech Innovations Inc', '123 Silicon Valley', 'San Francisco', '555-0101', 21, 5.00);
INSERT INTO Clients (CLIENTNAME, ADDRESS, CITY, PHONE, CLIENT_TYPE, DISCOUNT) VALUES ('Global University', '789 Campus Drive', 'Austin', '555-0103', 23, 12.00);
INSERT INTO Clients (CLIENTNAME, ADDRESS, CITY, PHONE, CLIENT_TYPE, DISCOUNT) VALUES ('MegaMart Chain', '654 Retail Plaza', 'Los Angeles', '555-0105', 24, 4.00);
INSERT INTO Clients (CLIENTNAME, ADDRESS, CITY, PHONE, CLIENT_TYPE, DISCOUNT) VALUES ('Green Energy Corp', '369 Renewable Way', 'Phoenix', '555-0109', 25, 8.50);

-- Add some products using existing PRODUCT_TYPE values (2-6 exist, new ones will be auto-generated)
INSERT INTO Products (PRODUCT_NO, PRODUCTNAME, PRODUCTTYPE, PROFIT_PERCENT, UNIT_MEASURE, REORDER_LEVEL, SELL_PRICE, COST_PRICE, QTY_ON_HAND) VALUES ('LAPTOP002', 'Gaming Laptop Pro', 2, 30.00, 'pieces', 8, 1500.00, 1153.85, 25);
INSERT INTO Products (PRODUCT_NO, PRODUCTNAME, PRODUCTTYPE, PROFIT_PERCENT, UNIT_MEASURE, REORDER_LEVEL, SELL_PRICE, COST_PRICE, QTY_ON_HAND) VALUES ('TABLET002', 'Business Tablet', 3, 25.00, 'pieces', 15, 600.00, 480.00, 40);
INSERT INTO Products (PRODUCT_NO, PRODUCTNAME, PRODUCTTYPE, PROFIT_PERCENT, UNIT_MEASURE, REORDER_LEVEL, SELL_PRICE, COST_PRICE, QTY_ON_HAND) VALUES ('KEYBOARD001', 'Mechanical Keyboard', 4, 50.00, 'pieces', 30, 120.00, 80.00, 75);
INSERT INTO Products (PRODUCT_NO, PRODUCTNAME, PRODUCTTYPE, PROFIT_PERCENT, UNIT_MEASURE, REORDER_LEVEL, SELL_PRICE, COST_PRICE, QTY_ON_HAND) VALUES ('WEBCAM001', 'HD Webcam 1080p', 5, 40.00, 'pieces', 25, 80.00, 57.14, 60);
INSERT INTO Products (PRODUCT_NO, PRODUCTNAME, PRODUCTTYPE, PROFIT_PERCENT, UNIT_MEASURE, REORDER_LEVEL, SELL_PRICE, COST_PRICE, QTY_ON_HAND) VALUES ('ROUTER002', 'Wireless Router Pro', 6, 35.00, 'pieces', 12, 200.00, 148.15, 30);

-- Add some invoices using existing client and employee IDs
INSERT INTO INVOICES (INVOICE_DATE, CLIENT_NO, EMPLOYEEID, INVOICE_STATUS, INVOICEMEMO) VALUES (DATE '2024-05-01', 1, 6, 'Paid', 'Technology equipment order');
INSERT INTO INVOICES (INVOICE_DATE, CLIENT_NO, EMPLOYEEID, INVOICE_STATUS, INVOICEMEMO) VALUES (DATE '2024-05-05', 2, 6, 'Pending', 'Hospital equipment upgrade');

-- Add invoice details using the new products and invoices
INSERT INTO INVOICE_DETAILS (INVOICENO, PRODUCT_NO, QTY, PRICE) VALUES (5, 'LAPTOP002', 2, 1500.00);
INSERT INTO INVOICE_DETAILS (INVOICENO, PRODUCT_NO, QTY, PRICE) VALUES (5, 'WEBCAM001', 2, 80.00);
INSERT INTO INVOICE_DETAILS (INVOICENO, PRODUCT_NO, QTY, PRICE) VALUES (6, 'TABLET002', 3, 600.00);
INSERT INTO INVOICE_DETAILS (INVOICENO, PRODUCT_NO, QTY, PRICE) VALUES (6, 'KEYBOARD001', 3, 120.00);

-- Show final record counts
SELECT 'CLIENTS' as TABLE_NAME, COUNT(*) as RECORD_COUNT FROM CLIENTS
UNION ALL
SELECT 'CLIENT_TYPE', COUNT(*) FROM CLIENT_TYPE
UNION ALL
SELECT 'PRODUCTS', COUNT(*) FROM PRODUCTS
UNION ALL
SELECT 'PRODUCT_TYPE', COUNT(*) FROM PRODUCT_TYPE
UNION ALL
SELECT 'EMPLOYEES', COUNT(*) FROM EMPLOYEES
UNION ALL
SELECT 'JOBS', COUNT(*) FROM JOBS
UNION ALL
SELECT 'INVOICES', COUNT(*) FROM INVOICES
UNION ALL
SELECT 'INVOICE_DETAILS', COUNT(*) FROM INVOICE_DETAILS;

COMMIT;

EXIT;