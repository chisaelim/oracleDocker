-- a. Table: Client_Type
CREATE TABLE Client_Type (
    CLIENT_TYPE NUMBER(3,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TYPE_NAME VARCHAR2(30) UNIQUE NOT NULL,
    DISCOUNT_RATE NUMBER(5,2) DEFAULT 0,
    REMARKS VARCHAR2(50)
);

-- b. Table: Clients
CREATE TABLE Clients (
    CLIENT_NO NUMBER(8,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CLIENTNAME VARCHAR2(50) UNIQUE NOT NULL,
    ADDRESS VARCHAR2(150),
    CITY VARCHAR2(50),
    PHONE VARCHAR2(15) UNIQUE NOT NULL,
    CLIENT_TYPE NUMBER(3,0),
    DISCOUNT NUMBER(5,2),
    FOREIGN KEY (CLIENT_TYPE) REFERENCES Client_Type(CLIENT_TYPE)
);

-- c. Table: Product_Type
CREATE TABLE Product_Type (
    PRODUCTTYPE_ID NUMBER(3,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    PRODUCTTYPE_NAME VARCHAR2(50) UNIQUE NOT NULL,
    REMARKS VARCHAR2(30)
);

-- d. Table: Products
CREATE TABLE Products (
    PRODUCT_NO VARCHAR2(20) PRIMARY KEY,
    PRODUCTNAME VARCHAR2(40) UNIQUE NOT NULL,
    PRODUCTTYPE NUMBER(3,0),
    PROFIT_PERCENT NUMBER(5,2) NOT NULL,
    UNIT_MEASURE VARCHAR2(15) NOT NULL,
    REORDER_LEVEL NUMBER(3,0) NOT NULL,
    SELL_PRICE NUMBER(12,2) CHECK (SELL_PRICE >= 0) NOT NULL,
    COST_PRICE NUMBER(12,2) CHECK (COST_PRICE >= 0) NOT NULL,
    QTY_ON_HAND NUMBER(6,0),
    PHOTO VARCHAR2(255),
    FOREIGN KEY (PRODUCTTYPE) REFERENCES Product_Type(PRODUCTTYPE_ID)
);

-- e. Table: JOBS (Fixed CHECK constraint)
CREATE TABLE JOBS (
    JOB_ID NUMBER(3,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    JOB_TITLE VARCHAR2(50) UNIQUE NOT NULL,
    MIN_SALARY NUMBER(8,0),
    MAX_SALARY NUMBER(8,0)
);

-- Add CHECK constraint separately for JOBS table
ALTER TABLE JOBS ADD CONSTRAINT chk_salary_range CHECK (MAX_SALARY >= MIN_SALARY);

-- f. Table: Employees
CREATE TABLE Employees (
    EMPLOYEEID NUMBER(6,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EMPLOYEENAME VARCHAR2(50) NOT NULL,
    GENDER VARCHAR2(6),
    BIRTHDATE DATE,
    JOB_ID NUMBER(3,0),
    ADDRESS VARCHAR2(150),
    PHONE VARCHAR2(15) UNIQUE,
    SALARY NUMBER(8,0),
    REMARKS VARCHAR2(50),
    PHOTO VARCHAR2(255),
    FOREIGN KEY (JOB_ID) REFERENCES JOBS(JOB_ID)
);

-- g. Table: INVOICES
CREATE TABLE INVOICES (
    INVOICENO NUMBER(12,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    INVOICE_DATE DATE DEFAULT SYSDATE,
    CLIENT_NO NUMBER(8,0),
    EMPLOYEEID NUMBER(6,0),
    INVOICE_STATUS VARCHAR2(30),
    INVOICEMEMO VARCHAR2(100),
    FOREIGN KEY (CLIENT_NO) REFERENCES Clients(CLIENT_NO),
    FOREIGN KEY (EMPLOYEEID) REFERENCES Employees(EMPLOYEEID)
);

-- h. Table: INVOICE_DETAILS
CREATE TABLE INVOICE_DETAILS (
    INVOICENO NUMBER(12,0),
    PRODUCT_NO VARCHAR2(20),
    QTY NUMBER(8,0),
    PRICE NUMBER(12,2),
    PRIMARY KEY (INVOICENO, PRODUCT_NO),
    FOREIGN KEY (INVOICENO) REFERENCES INVOICES(INVOICENO),
    FOREIGN KEY (PRODUCT_NO) REFERENCES Products(PRODUCT_NO)
);

-- Display table creation summary
SELECT 'All tables created successfully!' AS STATUS FROM DUAL;

-- Show all created tables with column count
SELECT 
    table_name,
    (SELECT COUNT(*) FROM user_tab_columns c WHERE c.table_name = t.table_name) as column_count
FROM user_tables t 
WHERE table_name IN ('CLIENT_TYPE', 'CLIENTS', 'PRODUCT_TYPE', 'PRODUCTS', 'JOBS', 'EMPLOYEES', 'INVOICES', 'INVOICE_DETAILS')
ORDER BY table_name;

COMMIT;